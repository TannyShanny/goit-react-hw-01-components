{"version":3,"sources":["components/Stats/Stats.module.css","components/Statistics/Statistics.module.css","components/Profile/Profile.module.css","components/FriendList/FriendListItem/FriendListItem.module.css","components/FriendList/FriendList.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Profile/Profile.jsx","components/Stats/Stats.jsx","components/Statistics/Statistics.jsx","components/FriendList/FriendListItem/FriendListItem.jsx","components/FriendList/FriendList.jsx","components/TransactionHistory/TransactionHistory.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profile","props","className","styles","description","src","avatar","alt","name","tag","location","Stats","stats","statsitem","label","quantity","followers","views","likes","Statistics","title","statistic","stat_list","map","stat","item","percentage","id","defaultProps","FriendListItem","friend","isOnline","statusOnline","statusOffline","width","FriendList","friends","TransactionHistory","items","transaction","type","amount","currency","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8cd17567.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"stats\":\"Stats_stats__tUFMG\",\"statsitem\":\"Stats_statsitem__8a0h_\",\"label\":\"Stats_label__X9J11\",\"quantity\":\"Stats_quantity__2WCo4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistic\":\"Statistics_statistic__1uT_d\",\"title\":\"Statistics_title__2LXAw\",\"stat_list\":\"Statistics_stat_list__2JX2-\",\"item\":\"Statistics_item__3Rqhb\",\"label\":\"Statistics_label__1adBf\",\"percentage\":\"Statistics_percentage__3LJqn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Profile_description__2VE6P\",\"avatar\":\"Profile_avatar__-PvXS\",\"name\":\"Profile_name__1DLkh\",\"tag\":\"Profile_tag__23R9G\",\"location\":\"Profile_location__3ae1v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"FriendListItem_friend__1IN2S\",\"item\":\"FriendListItem_item__2V-XH\",\"statusOnline\":\"FriendListItem_statusOnline__3cJiJ\",\"statusOffline\":\"FriendListItem_statusOffline__3X0E_\",\"avatar\":\"FriendListItem_avatar__oduRn\",\"name\":\"FriendListItem_name__3CjFi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendlist\":\"FriendList_friendlist__30-QD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction\":\"TransactionHistory_transaction__2-z3i\"};","import React from \"react\";\r\nimport styles from \"./Profile.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div className={styles.description}>\r\n      <img\r\n        src={props.avatar}\r\n        alt=\"Аватар пользователя\"\r\n        className={styles.avatar}\r\n      />\r\n      <p className={styles.name}>{props.name}</p>\r\n      <p className={styles.tag}>@{props.tag}</p>\r\n      <p className={styles.location}>{props.location}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nProfile.propTypes = {\r\n  avatar: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  tag: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  stats: PropTypes.shape({\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n  }),\r\n};\r\n\r\nexport default Profile;\r\n","import React from \"react\";\r\nimport styles from \"./Stats.module.css\";\r\n\r\nconst Stats = (props) => {\r\n  return (\r\n    <ul className={styles.stats}>\r\n      <li className={styles.statsitem}>\r\n        <span className={styles.label}>Followers</span>\r\n        <span className={styles.quantity}>{props.followers}</span>\r\n      </li>\r\n      <li className={styles.statsitem}>\r\n        <span className={styles.label}>Views</span>\r\n        <span className={styles.quantity}>{props.views}</span>\r\n      </li>\r\n      <li className={styles.statsitem}>\r\n        <span className={styles.label}>Likes</span>\r\n        <span className={styles.quantity}>{props.likes}</span>\r\n      </li>\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","import React from \"react\";\r\nimport styles from \"./Statistics.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Statistics = ({ title, stats }) => (\r\n  <section className={styles.statistic}>\r\n    {title && <h2 className={styles.title}>{title}</h2>}\r\n    <ul className={styles.stat_list}>\r\n      {stats.map((stat) => (\r\n        <li className={styles.item} key={stat.id}>\r\n          <span className={styles.label}> {stat.label}</span>\r\n          <span className={styles.percentage}> {stat.percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\n// {title && <h2 className={style.title}>{title}</h2>}\r\n\r\nStatistics.defaultProps = {\r\n  title: \"\",\r\n};\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\nimport styles from \"./FriendListItem.module.css\";\r\n\r\nconst FriendListItem = ({ friend }) => {\r\n  return (\r\n    <li className={styles.item} key={friend.id}>\r\n      <span\r\n        className={friend.isOnline ? styles.statusOnline : styles.statusOffline}\r\n      ></span>\r\n      <img className={styles.avatar} src={friend.avatar} alt=\"\" width=\"48\" />\r\n      <p className={styles.name}>{friend.name}</p>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default FriendListItem;\r\n","import React from \"react\";\r\nimport styles from \"./FriendList.module.css\";\r\nimport FriendListItem from \"./FriendListItem/FriendListItem\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst FriendList = ({ friends }) => {\r\n  return (\r\n    <ul className={styles.friend}>\r\n      {friends.map((friend) => (\r\n        <FriendListItem friend={friend} />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default FriendList;\r\n","import React from \"react\";\r\nimport styles from \"./TransactionHistory.module.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n  return (\r\n    <table className={styles.transaction}>\r\n      <thead>\r\n        <tr>\r\n          <th>Type</th>\r\n          <th>Amount</th>\r\n          <th>Currency</th>\r\n        </tr>\r\n      </thead>\r\n\r\n      <tbody>\r\n        {items.map((item) => (\r\n          <tr key={item.id}>\r\n            <td>{item.type}</td>\r\n            <td>{item.amount}</td>\r\n            <td>{item.currency}</td>\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nTransactionHistory.propTypes = {\r\n  itemss: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.string.isRequired,\r\n      amount: PropTypes.string.isRequired,\r\n      currency: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default TransactionHistory;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Profile from \"./components/Profile/Profile.jsx\";\nimport user from \"./user.json\";\nimport Stats from \"./components/Stats/Stats.jsx\";\nimport Statistics from \"./components/Statistics/Statistics.jsx\";\nimport statisticalData from \"./statistical-data.json\";\nimport FriendList from \"./components/FriendList/FriendList\";\nimport friends from \"./components/FriendList/friends.json\";\nimport TransactionHistory from \"./components/TransactionHistory/TransactionHistory\";\nimport transactions from \"./components/TransactionHistory/transactions.json\";\n\nconst App = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"profile\">\n        <Profile\n          name={user.name}\n          tag={user.tag}\n          location={user.location}\n          avatar={user.avatar}\n          stats={user.stats}\n        />\n        <Stats\n          followers={user.stats.followers}\n          likes={user.stats.likes}\n          views={user.stats.views}\n        />\n      </div>\n      <div className=\"statistics\">\n        <Statistics title=\"Upload stats\" stats={statisticalData} />\n      </div>\n      <div className=\"friendlist\">\n        <FriendList friends={friends} />\n      </div>\n      <div className=\"transactionHistory\">\n        <TransactionHistory items={transactions} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}